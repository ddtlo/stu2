<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.chl</groupId>
        <artifactId>stu2</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>com.chl</groupId>
    <artifactId>service</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
        <jib-maven-plugin.version>2.1.0</jib-maven-plugin.version>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.chl</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>5.7.6</version>
        </dependency>

        <!--服务发现-->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo</artifactId>
            <version>${dubbo.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>spring-context</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>nacos-client</artifactId>
            <groupId>com.alibaba.nacos</groupId>
            <version>2.0.4</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.alibaba.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

<!--        日志-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.mybatis.spring.boot</groupId>-->
<!--            <artifactId>mybatis-spring-boot-starter</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>mysql</groupId>-->
<!--            <artifactId>mysql-connector-java</artifactId>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.rocketmq</groupId>
            <artifactId>rocketmq-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <arg>-J--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED</arg>
                        <!--<arg>&#45;&#45;Dio.netty.tryReflectionSetAccessible=true</arg>-->
                    </compilerArgs>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <fork>true</fork>
                    <!--<includeSystemScope>true</includeSystemScope>-->
                </configuration>
            </plugin>
            <!-- Jib -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
                <configuration>
                    <from>
                        <image>registry.cn-shanghai.aliyuncs.com/chl_self/chl@sha256:98d09eadbabdf92a6c63d4ab4df3cb08d65959a49766596c0ce3598adaa1eff0</image>
                        <auth>
                            <username>ddtlo</username>
                            <password>85TDAGGt</password>
                        </auth>
                    </from>
                    <to>
                        <image>registry.cn-shanghai.aliyuncs.com/chl_self/chl:stu2_v001</image>
                        <auth>
                            <username>ddtlo</username>
                            <password>85TDAGGt</password>
                        </auth>
                    </to>
                    <container>
                        <jvmFlags>
                            <jvmFlag>-Xms32m</jvmFlag>
                            <jvmFlag>-Xms128m</jvmFlag>
                            <jvmFlag>-Dio.netty.tryReflectionSetAccessible=true</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.base/jdk.internal.misc=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.base/jdk.internal.reflect=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--illegal-access=warn</jvmFlag>
                            <!--                            <jvmFlag>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008</jvmFlag>-->
                            <!--                            <jvmFlag>-Xdebug</jvmFlag>-->
                            <jvmFlag>-Dproject.name=${project.artifactId}</jvmFlag>
                            <jvmFlag>-Duser.timezone=GMT+8</jvmFlag>
                            <!--                            <jvmFlag>-javaagent:${mySkywalkingPath}</jvmFlag>-->
                            <!--                            <jvmFlag>-Dskywalking.agent.service_name=${mySkywalkingServiceName}</jvmFlag>-->
                            <!--                            <jvmFlag>-Dskywalking.collector.backend_service=${mySkywalkingPort}</jvmFlag>-->
                            <!--                            <jvmFlag>-Dskywalking.trace.ignore_path=Lettuce/**</jvmFlag>-->
                        </jvmFlags>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <ports>
                            <port>16080</port>
                            <port>16090</port>
                        </ports>
                        <mainClass>com.chl.FluxApplication</mainClass>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <!--        将main的配置共享到test中-->
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/main/resources</directory>
            </testResource>
        </testResources>
    </build>
</project>
